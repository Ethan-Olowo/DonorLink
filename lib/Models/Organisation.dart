import 'package:cloud_firestore/cloud_firestore.dart';

import 'User.dart';
import 'Financial.dart';
import 'Rating.dart';
import 'Appointment.dart';
import 'Donation.dart';

class Organisation extends User {
  String type;
  String location;
  int rating;
  String? paymentMethod;
  String? paymentDetails;
  bool approval;
  String? image;

  Organisation(String id, String name, String phone, String email, this.type, this.location, this.rating, this.paymentMethod, this.paymentDetails, this.approval, this.image)
      : super(id, name, phone, email,);

  factory Organisation.fromFirestore(DocumentSnapshot snapshot,){
      final data = snapshot.data() as Map<String, dynamic>;
      return Organisation(
        snapshot.id, data['name'], data['phone'], data['email'], data['orgtype'], data['location'], data['rating'], data['paymentMethod'], data['paymentDetails'], data['approval'], data['image']
      );
    }
  
  Map<String, dynamic> toFirestore() {
    return {
      //id is autogenerated
      if (name != null) "name": name,
      if (phone != null) "phone": phone,
      if (email != null) "email": email,
      if (rating != null) "rating": rating,

      if (type != null) "orgtype": type,
      if (location != null) "location": location,
      if (paymentDetails != null) "paymentDetails": paymentDetails,
      if (paymentMethod != null) "paymentMethod": paymentMethod,
      if (approval != null) "approval": approval,
      if (image != null) "image": image,
    };
  }

  void setPaymentDetails(String paymentDetails) { /*...*/ }
  void setImage(String image) { /*...*/ }
  void setPaymentMethod(int method) { /*...*/ }
  void setLocation(String location) { /*...*/ }
  void setType(String type) { /*...*/ }
  String getLocation() { /*...*/ return location; }
  String getType() { /*...*/ return type; }
  Financial submitFinancial(Financial financial) { /*...*/ return financial; }
  List<Rating> getRatings() { /*...*/ return []; }
  List<Appointment> getAppointments() { /*...*/ return []; }
  
  @override
  String toString(){
    return 'Organisation '+super.toString()+' \nOrganisation Type: $type \nLocation: $location \nRating: $rating';
  }

    @override
  List<Donation> getDonations() {
    // TODO: implement getDonations
    throw UnimplementedError();
  }
  
  @override
  List<Financial> getFinancials() {
    // TODO: implement getFinancials
    throw UnimplementedError();
  }
}
